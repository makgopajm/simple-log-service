name: Build & Deploy Image

on:
  pull_request:
    branches:
      - main
    types:
      - closed
  workflow_dispatch:

env:
  OIDC_ROLE: ${{ secrets.GITHUBACTIONSROLE }}
  AWS_ACCOUNT_ID: ${{ secrets.ACCOUNT }}
  ENV_VAR: dev
  AWS_REGION: us-east-1
  WR_ECR_REPOSITORY: log-service-writer-ecr
  RD_ECR_REPOSITORY: log-service-reader-ecr
  WR_LAMBDA: writer-lambda
  RD_LAMBDA: reader-lambda

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    environment: AWS
    if: github.event.pull_request.merged == true && contains(join(github.event.pull_request.labels.*.name, ','), 'dev')

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ env.OIDC_ROLE }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # Build and push Docker image to ECR - Writer Lambda
      - name: Tag and Push Docker image for Lambda Function writer
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.run_number }}
        run: |
          cd write-function
          docker build -t $ECR_REGISTRY/${{ env.WR_ECR_REPOSITORY }}:$IMAGE_TAG .
          docker tag $ECR_REGISTRY/${{ env.WR_ECR_REPOSITORY }}:$IMAGE_TAG $ECR_REGISTRY/${{ env.WR_ECR_REPOSITORY }}:latest
          docker push $ECR_REGISTRY/${{ env.WR_ECR_REPOSITORY }}:$IMAGE_TAG
          docker push $ECR_REGISTRY/${{ env.WR_ECR_REPOSITORY }}:latest

      # Build and push Docker image to ECR - Reader Lambda
      - name: Tag and Push Docker image for Lambda Function reader
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.run_number }}
        run: |
          cd read-function
          docker build -t $ECR_REGISTRY/${{ env.RD_ECR_REPOSITORY }}:$IMAGE_TAG .
          docker tag $ECR_REGISTRY/${{ env.RD_ECR_REPOSITORY }}:$IMAGE_TAG $ECR_REGISTRY/${{ env.RD_ECR_REPOSITORY }}:latest
          docker push $ECR_REGISTRY/${{ env.RD_ECR_REPOSITORY }}:$IMAGE_TAG
          docker push $ECR_REGISTRY/${{ env.RD_ECR_REPOSITORY }}:latest

      # Optional: Deploy Writer Lambda with new image
      # - name: Deploy Lambda Function Writer
      #   env:
      #     ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      #   run: |
      #     aws lambda update-function-code \
      #       --function-name ${{ env.WR_LAMBDA }} \
      #       --image-uri $ECR_REGISTRY/${{ env.WR_ECR_REPOSITORY }}:latest

      # Optional: Deploy Reader Lambda with new image
      # - name: Deploy Lambda Function Reader
      #   env:
      #     ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      #   run: |
      #     aws lambda update-function-code \
      #       --function-name ${{ env.RD_LAMBDA }} \
      #       --image-uri $ECR_REGISTRY/${{ env.RD_ECR_REPOSITORY }}:latest
