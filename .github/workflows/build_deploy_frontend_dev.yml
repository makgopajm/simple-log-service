# Building and Deploying the Simple Log Service frontend

# Name of the workflow
name: Deploy Frontend to S3

# Trigger when:
# 1. A pull request to the 'develop' branch is closed and labeled appropriately.
# 2. A repository_dispatch event is triggered by the infra repo with dynamic values.
on:
  pull_request:
    branches:
      - main
    types:
      - closed
  repository_dispatch:
    types: [deploy-frontend]
  workflow_dispatch:

# Global environment variables from GitHub Secrets
env:
  AWS_REGION: us-east-1
  OIDC_ROLE: ${{ secrets.GITHUBACTIONSROLE }}
  AWS_ACCOUNT_ID: ${{ secrets.ACCOUNT }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: AWS

    # This job runs if either:
    # - it's a repo_dispatch event (from infra pipeline), OR
    # - a PR to develop is merged and labeled 'frontend_deploy'
    if: github.event_name == 'repository_dispatch' || github.event_name == 'workflow_dispatch' ||
        (github.event.pull_request.merged == true && contains(join(github.event.pull_request.labels.*.name, ','), 'frontend_deploy'))

    permissions:
      id-token: write
      contents: read

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Configure AWS credentials via OIDC
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ env.OIDC_ROLE }}
          aws-region: ${{ env.AWS_REGION }}

      # Inject API URLs and set bucket name from repository_dispatch payload
      - name: Inject config values into app.js
        if: github.event_name == 'repository_dispatch'
        env:
          WRITE_LOG_URL: ${{ github.event.client_payload.writer_url }}
          GET_LOGS_URL: ${{ github.event.client_payload.reader_url }}
          COGNITO_REGION: ${{ github.event.client_payload.region }}
          USER_POOL_ID: ${{ github.event.client_payload.user_pool_id }}
          USER_POOL_CLIENT_ID: ${{ github.event.client_payload.user_pool_client_id }}
          COGNITO_DOMAIN: ${{ github.event.client_payload.cognito_domain }}
        run: |
          echo "Injecting API Gateway URLs and Cognito details into app.js..."
          sed -i "s|__WRITE_LOG_URL__|${WRITE_LOG_URL}|" static/app.js
          sed -i "s|__GET_LOGS_URL__|${GET_LOGS_URL}|" static/app.js
          sed -i "s|__COGNITO_REGION__|${COGNITO_REGION}|" static/app.js
          sed -i "s|__USER_POOL_ID__|${USER_POOL_ID}|" static/app.js
          sed -i "s|__USER_POOL_CLIENT_ID__|${USER_POOL_CLIENT_ID}|" static/app.js
          sed -i "s|__COGNITO_DOMAIN__|${COGNITO_DOMAIN}|" static/app.js

      # Get S3 bucket name from repository_dispatch payload
      - name: Set S3 Bucket Name
        if: github.event_name == 'repository_dispatch'
        run: echo "S3_BUCKET_NAME=${{ github.event.client_payload.s3_bucket_name }}" >> $GITHUB_ENV

      # Debug step to confirm the S3 bucket name
      - name: Debug S3 Bucket Name
        run: echo "S3_BUCKET_NAME is:" ${{ env.S3_BUCKET_NAME }}

      # Sync frontend files to the S3 bucket
      - name: Upload frontend files to S3
        run: |
          aws s3 sync static/ s3://${{ env.S3_BUCKET_NAME }}/ --delete
